In Love with Golang
How Golang change my life
15:04 3 Dec 2016
Tags: golang, present, gdgfest

Evan Lin
Cloud Architect, LinkerNetworks
evanslin@gmail.com
http://www.evanlin.com/
@Evan_Lin
slide is [[https://github.com/kkdai/golangtalks][https://github.com/kkdai/golangtalks]]

* About Me

- Cloud Architect @ Linker Networks
- [[http://golang.tw][Golang.TW]] Co-Orgnizer
- Top 5 Taiwan Golang open source contributor ([[http://github-awards.com/][Github Award]] )
- Developer, Curator, Blogger
- Curator of Codetengu

* How to be a great programmer

* Programming Go!

.image great-go.png

* Whis is Golang?

Create by Google (That's why I here :p)

Design by

- Ken Thompson
- Rob Pike
- Robert Griesemer

Feature:

- Compiled
- Statically Typed
- Garbage Collection

* Why Go?

Go is an answer to problems of scale at Google.
.image https://talks.golang.org/2012/splash/datacenter.jpg 

* I know Golang comes from Google, but why we need it?

Fast!

Make Programming *FUN* again!

- gofmt
- well-define packages
- great tools
- great apps

* Go is Fast 

.image go-fast.png

* Make programming fun again - gofmt

[[https://play.golang.org/p/EqGFeNyrHJ][Code is here]]

.image gofmt.png

* In case you are wondering 

.image tab.jpg

* Make programming fun again - Great built-in package

Golang have well-define package, such as :

- Powerful *concurrency* feature by built-in package with goroutine and channel.
- *net/http*: Rich tools for http, include web server and https (http/2)
- *encoding/json*: Useful tool for json encode and decode.

* Sample code on goroutine and channel
.play concurrent.go

* Sample code for net/http

*note*: this code might not run correctly in appspot because it need open port on local machine.

.play web.go

if you use https and golang version is bigger than 1.6, you get free *HTTP/2*!

* Sample code for encoding/json
.play -edit json.go

* Great Tools

- go test
- godoc
- present 
- go mobile

* Do you write your Test?

.image test-fun.jpg



* Go Test!

Go has a built-in testing framework.

It is provided by the testing package and the go test command.

- test
- coverage 
- benchmark

* Go test sample

Here is a complete test file that tests the strings.Index function:

.code test1.go

* Go test our code

Let's test our code.

  $ go test
  PASS

  $ go test -v
  === RUN TestIndex
  --- PASS: TestIndex (0.00 seconds)
  PASS

The go tool can report test coverage statistics.

  $ go test -cover
  PASS
  coverage: 96.4% of statements
  ok      strings    0.692s

* Benchmark 

Go tool can run benchmark of your code.

  func BenchmarkHello(b *testing.B) {
      for i := 0; i < b.N; i++ {
          fmt.Sprintf("hello")
      }
  }

Result as follow:

  BenchmarkHello    10000000    282 ns/op

* Do you write document after you complete your code?

.image fun-doc.jpg

* Godoc

Need good documentation? Just use Godoc !

- Generate document from your code.
- Everyone can see on https://godoc.or://godoc.org 

[[https://godoc.org/github.com/kkdai/mstranslator][Example]]

* Present

Great presentation tool for Golang, include follow feature:

- Simple and Easy
- Integrate with Golang (play code in your slide)

.play hello.go

* gomobile

Gomobile is a tool to help you build golang package for iOS/Android.

When you use gomobile, you can build.

- Native iOS/Android App with Golang
- iOS/Android Golang package which you can reduce you devlopment cost. (One golang package for server/iOS/Android)

.image https://raw.githubusercontent.com/golang/mobile/master/doc/caution.png

* Great Apps

- Docker
- Kubernetes
- etcd
- Prometheus
- *Your_App*


* How Golang change my life?

Golang is easy and fast!!

- We could speedup our coding time.

Golang is compile language with garbage collection and could be pack into single binary

- Easy to portable and deployment on server.

Golang have rich toolchain and powerful concurrency.

- We could write web app, web service and multi-thread console program.


* Project 52 - Write a new project every week within One Year.

Project [[https://github.com/kkdai/project52][Github]].

Start from 2015/06 ~ 2016/06

52 projects include:

- *Tools* *for* *fun*: FBPage, InstagramDownloader, ifttt-plurk-converter..
- *Data* *Structure*: Bloomfilter, Pubsub, Skiplist, Radix-Tree, twitter, slack-console.
- *Automata* *Related*: nfa, dfa, e-nfa, re2epsnfa, cyk, tm.
- *IoT* *Related*: Beacon, CoapPubsub...
- *Paper* *Survey*: Raft, Paxos, Maglev, Gorilla..
- *Chatbots*: LineBotTempalte...

* Talks

Learning Golang help me to join and share my experience in following talks:

- COSCUP 2016: [[http://www.slideshare.net/EvansLin/coscup-2016-project-52-for-golang][Project 52]].
- Modern Web 2016: [[http://www.slideshare.net/EvansLin/modern-web-2016-using-golang-to-build-a-smart-im-bot][Make Chatbot with Golang]]
- GTG15, GTG16
- [[https://docs.google.com/presentation/d/1KksoZxQCIsPIcZFtKdf7cZ9eacSWcKeUfgXodAbYb5g/edit?usp=sharing][ChatBot Meetup]]
- Here :)


* Golang Meetup


Already have 18 meetup until now, we will have meetup in fourth week of month.

GTG#19 will be 2016/12/20

.image golangtw.jpg

* Join Golang Taipei Meetup

[[http://golang.tw][Golang.tw]]

Join our Facebook Group: [[https://www.facebook.com/groups/269001993248363/743848382430386][Link]]

.image gofb.png

Follow our twitter: [[https://twitter.com/golangtw][golangtw]]

* Golang roadmap

Golang already have 7 years

Currently version: 1.7.3

Go 1.8: 2017/01/31

- Fast compilation
- Code generation improvements (SSA) 
- Defer and cgo improvements (defer 30%, cgo 45%)
- Go 1.7 support 64 bits mips, Go 1.8 will support 32 bits mips.

(Refer Dave Channey: [[https://dave.cheney.net/2016/11/19/go-1-8-toolchain-improvements][Go 1.8 toolchain improvements]] )


Go 1.9: 2017/07/31

See more detail milestone [[https://github.com/golang/go/milestones][here]]


* Golang Taipei : Call For Speaker

.image cfp.jpg

* Let's GO!

.image letsgo.jpg

* One More Thing!!!

* LinkerNetworks is hiring

Senior Data/Backend Engineer

- Strong Experience with SMACK and Tensorflow
- Strong Experience with Kubernetes/DCOS/Docker

